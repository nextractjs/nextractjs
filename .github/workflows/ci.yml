name: CI (Release)

on:
  push:
    branches:
      - 'main'

defaults:
  run:
    shell: bash

jobs:
  lint:
    name: Lint & Format
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Status
        run: git status

      - name: Lint
        run: yarn run lint:fix

      - name: Format
        run: yarn run format:fix

  test:
    name: Test packages
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: List package versions
        run: yarn list --depth=0

      - name: Test packages
        run: yarn run test

  changelog:
    name: Build & Release
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' && github.repository_owner == 'nextractjs' }}
    needs: [test, lint]
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install

      - name: Build packages
        run: yarn run build

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          version: yarn version-packages
          publish: yarn release
          commit: 'ci: release'
          title: 'ci: release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
